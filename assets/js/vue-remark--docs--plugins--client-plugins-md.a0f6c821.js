(window.webpackJsonp=window.webpackJsonp||[]).push([[221],{UQSp:function(t,e,s){"use strict";e.a={name:"VueRemarkRoot",render:function(t){return t("div",null,this.$slots.default)}}},cMFG:function(t,e,s){"use strict";s.r(e);var n=s("KHd+"),a=s("UQSp"),r=s("oCYn");function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}r.a.config.optionMergeStrategies;var i={VueRemarkRoot:a.a},p=function(t){var e=t.options.components=t.options.components||{},s=t.options.computed=t.options.computed||{};Object.keys(i).forEach((function(t){"object"===o(i[t])&&"function"==typeof i[t].render||"function"==typeof i[t]&&"function"==typeof i[t].options.render?e[t]=i[t]:s[t]=function(){return i[t]}}))},l=r.a.config.optionMergeStrategies,c="__vueRemarkFrontMatter",u={excerpt:null,title:"Client Plugins"};var v=function(t){t.options[c]&&(t.options[c]=u),r.a.util.defineReactive(t.options,c,u),t.options.computed=l.computed({$frontmatter:function(){return t.options[c]}},t.options.computed)},_=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("VueRemarkRoot",[s("h1",{attrs:{id:"client-plugins"}},[s("a",{attrs:{href:"#client-plugins","aria-hidden":"true"}},[t._v("#")]),t._v("Client Plugins")]),s("blockquote",[s("p",[t._v("Client plugins extend Hero's frontend functionality at the Client interface level. YOu can use them to add extra properties and methods to the hero and/or tab instances.")])]),s("h2",{attrs:{id:"creating-your-own-client-plugin"}},[s("a",{attrs:{href:"#creating-your-own-client-plugin","aria-hidden":"true"}},[t._v("#")]),t._v("Creating Your Own Client Plugin")]),s("p",[t._v("Adding a new plugin is as simple as creating a javascript class with the correct properties and methods, then registering it with "),s("code",{pre:!0},[t._v("hero.use()")]),t._v(".")]),s("p",[t._v("We recommend using the ClientPlugin base class in @ulixee/hero-plugin-utils, which handles setting most of the required properties and methods, everything except the static "),s("code",{pre:!0},[t._v("id")]),t._v(" property. Here's a simple plugin that adds a single hello() method to hero: ")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",{pre:!0,attrs:{class:"language-javascript"}},[s("span",{pre:!0,attrs:{class:"token keyword module"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token imports"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token maybe-class-name"}},[t._v("ClientPlugin")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword module"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@ulixee/hero-plugin-utils'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword module"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword module"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClientHelloPlugin")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClientPlugin")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" readonly id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'client-hello-plugin'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// static type handled by ClientPlugin base")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onHero")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("hero")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    hero"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token method-variable function-variable method function property-access"}},[t._v("hello")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token console class-name"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token method function property-access"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("Hello ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])]),s("p",[t._v("To register this ClientHelloPlugin in Hero, just pass it to "),s("code",{pre:!0},[t._v("hero.use()")]),t._v(":")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",{pre:!0,attrs:{class:"language-javascript"}},[s("span",{pre:!0,attrs:{class:"token keyword module"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token imports"}},[t._v("hero")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword module"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@ulixee/hero'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword module"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token imports"}},[s("span",{pre:!0,attrs:{class:"token maybe-class-name"}},[t._v("ClientHelloPlugin")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword module"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./ClientHelloPlugin'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nhero"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token method function property-access"}},[t._v("use")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token maybe-class-name"}},[t._v("ClientHelloPlugin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])]),s("p",[t._v("Your hero instance now supports the hello() method:")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",{pre:!0,attrs:{class:"language-javascript"}},[t._v("hero"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token method function property-access"}},[t._v("hello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'World'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])]),s("p",[t._v("The rest of this page documents the various functionalities you can add to your class.")]),s("h2",{attrs:{id:"constructor"}},[s("a",{attrs:{href:"#constructor","aria-hidden":"true"}},[t._v("#")]),t._v("Constructor")]),s("h3",{attrs:{id:"new-clientpluginemem"}},[s("a",{attrs:{href:"#new-clientpluginemem","aria-hidden":"true"}},[t._v("#")]),t._v("new ClientPlugin"),s("em",[t._v("()")])]),s("p",[t._v("A new instance of ClientPlugin is created for every hero instance. Use a constructor if you want to hook into the plugin's initialization. The constructor receives no arguments.")]),s("h2",{attrs:{id:"class-properties"}},[s("a",{attrs:{href:"#class-properties","aria-hidden":"true"}},[t._v("#")]),t._v("Class Properties")]),s("h3",{attrs:{id:"clientpluginid-required"}},[s("a",{attrs:{href:"#clientpluginid-required","aria-hidden":"true"}},[t._v("#")]),t._v("ClientPlugin.id "),s("em",[t._v("required")])]),s("p",[t._v("This must be unique across all your Hero client plugins. We recommend using your plugin's npm package name.")]),s("h4",{attrs:{id:"type-string"}},[s("a",{attrs:{href:"#type-string","aria-hidden":"true"}},[t._v("#")]),s("strong",[t._v("Type")]),t._v(": "),s("code",{pre:!0},[t._v("string")])]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",{pre:!0,attrs:{class:"language-javascript"}},[s("span",{pre:!0,attrs:{class:"token keyword module"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token imports"}},[t._v("pkg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword module"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./package.json'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword module"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword module"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token maybe-class-name"}},[t._v("ClientHelloPlugin")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClientPlugin")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" readonly id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pkg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token property-access"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// static type handled by ClientPlugin base")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])]),s("h3",{attrs:{id:"clientplugintype-required"}},[s("a",{attrs:{href:"#clientplugintype-required","aria-hidden":"true"}},[t._v("#")]),t._v("ClientPlugin.type "),s("em",[t._v("required")])]),s("p",[t._v("This must always be set to "),s("code",{pre:!0},[t._v("'ClientPlugin'")]),t._v(". It's how Hero differentiates between different plugin types. If your class extended the ClientPlugin base in @ulixee/utils then this is already set.")]),s("h4",{attrs:{id:"type-string-this-must-always-be-set-to-clientplugin"}},[s("a",{attrs:{href:"#type-string-this-must-always-be-set-to-clientplugin","aria-hidden":"true"}},[t._v("#")]),s("strong",[t._v("Type")]),t._v(": "),s("code",{pre:!0},[t._v("string")]),t._v(" This must always be set to "),s("code",{pre:!0},[t._v("'ClientPlugin'")]),t._v(".")]),s("h3",{attrs:{id:"clientplugincoredependencyids-optional"}},[s("a",{attrs:{href:"#clientplugincoredependencyids-optional","aria-hidden":"true"}},[t._v("#")]),t._v("ClientPlugin.coreDependencyIds "),s("em",[t._v("optional")])]),s("p",[t._v("Use this property to specify a list of core pluginIds that your ClientPlugin needs to operate. You should keep this list to the absolute minimum required.")]),s("h4",{attrs:{id:"type-string-1"}},[s("a",{attrs:{href:"#type-string-1","aria-hidden":"true"}},[t._v("#")]),s("strong",[t._v("Type")]),t._v(": "),s("code",{pre:!0},[t._v("string[]")])]),s("h2",{attrs:{id:"instance-method-hooks"}},[s("a",{attrs:{href:"#instance-method-hooks","aria-hidden":"true"}},[t._v("#")]),t._v("Instance Method Hooks")]),s("p",[t._v("The following methods are all optional. Use them when you want to hook into a specific Hero flow:")]),s("h3",{attrs:{id:"onheroemhero-sendtocoreem-optional"}},[s("a",{attrs:{href:"#onheroemhero-sendtocoreem-optional","aria-hidden":"true"}},[t._v("#")]),t._v("onHero"),s("em",[t._v("(hero, sendToCore)")]),s("em",[t._v("optional")])]),s("p",[t._v("This method is called every time a new Hero in initialized.")]),s("h4",{attrs:{id:"arguments"}},[s("a",{attrs:{href:"#arguments","aria-hidden":"true"}},[t._v("#")]),s("strong",[t._v("Arguments")]),t._v(":")]),s("ul",[s("li",[t._v("hero "),s("code",{pre:!0},[t._v("Hero")])]),s("li",[t._v("sendToCore: "),s("code",{pre:!0},[t._v("(toPluginId: string, ...args: any[]) => Promise<any>")])])]),s("h4",{attrs:{id:"returns-void"}},[s("a",{attrs:{href:"#returns-void","aria-hidden":"true"}},[t._v("#")]),s("strong",[t._v("Returns")]),s("code",{pre:!0},[t._v("void")])]),s("h3",{attrs:{id:"ontabemhero-tab-sendtocoreem-optional"}},[s("a",{attrs:{href:"#ontabemhero-tab-sendtocoreem-optional","aria-hidden":"true"}},[t._v("#")]),t._v("onTab"),s("em",[t._v("(hero, tab, sendToCore)")]),s("em",[t._v("optional")])]),s("p",[t._v("This method is called every time a new Tab in initialized.")]),s("h4",{attrs:{id:"arguments-1"}},[s("a",{attrs:{href:"#arguments-1","aria-hidden":"true"}},[t._v("#")]),s("strong",[t._v("Arguments")]),t._v(":")]),s("ul",[s("li",[t._v("hero "),s("code",{pre:!0},[t._v("Hero")])]),s("li",[t._v("tab "),s("code",{pre:!0},[t._v("Tab")])]),s("li",[t._v("sendToCore: "),s("code",{pre:!0},[t._v("(toPluginId: string, ...args: any[]) => Promise<any>")])])]),s("h4",{attrs:{id:"returns-void-1"}},[s("a",{attrs:{href:"#returns-void-1","aria-hidden":"true"}},[t._v("#")]),s("strong",[t._v("Returns")]),s("code",{pre:!0},[t._v("void")])])])}),[],!1,null,null,null);"function"==typeof p&&p(_),"function"==typeof v&&v(_);e.default=_.exports}}]);