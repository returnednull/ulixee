(window.webpackJsonp=window.webpackJsonp||[]).push([[223],{"0pJ/":function(t,e,o){"use strict";o.r(e);var n=o("KHd+"),r=o("UQSp"),i=o("oCYn");function u(t){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}i.a.config.optionMergeStrategies;var a={VueRemarkRoot:r.a},s=function(t){var e=t.options.components=t.options.components||{},o=t.options.computed=t.options.computed||{};Object.keys(a).forEach((function(t){"object"===u(a[t])&&"function"==typeof a[t].render||"function"==typeof a[t]&&"function"==typeof a[t].options.render?e[t]=a[t]:o[t]=function(){return a[t]}}))},p=i.a.config.optionMergeStrategies,c="__vueRemarkFrontMatter",m={excerpt:null,title:"Human Emulators"};var l=function(t){t.options[c]&&(t.options[c]=m),i.a.util.defineReactive(t.options,c,m),t.options.computed=p.computed({$frontmatter:function(){return t.options[c]}},t.options.computed)},f=Object(n.a)({},(function(){var t=this.$createElement,e=this._self._c||t;return e("VueRemarkRoot",[e("h1",{attrs:{id:"human-emulators"}},[e("a",{attrs:{href:"#human-emulators","aria-hidden":"true"}},[this._v("#")]),this._v("Human Emulators")]),e("blockquote",[e("p",[this._v("HumanEmulators are plugins that sit between your script and Hero's mouse/keyboard movements. They translate your clicks and moves into randomized human-like patterns that can pass the bot-blocker checks.")])]),e("p",[this._v("This is a major work in progress. We are trying to determine whether Human Emulators are necessary as a unique type of Core Plugin.")]),e("p",[this._v("See "),e("code",{pre:!0},[this._v("@ulixee/default-human-emulator")]),this._v(" for an implementation example.")])])}),[],!1,null,null,null);"function"==typeof s&&s(f),"function"==typeof l&&l(f);e.default=f.exports},UQSp:function(t,e,o){"use strict";e.a={name:"VueRemarkRoot",render:function(t){return t("div",null,this.$slots.default)}}}}]);